{"version":3,"sources":["app/CacheProvider.ts"],"names":[],"mappings":"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","file":"CacheProvider.js","sourcesContent":["import * as redis from 'redis';\r\nimport * as RedisClustr from 'redis-clustr';\r\nredis.Multi.prototype.execAsync = (<any>Promise).promisify(redis.Multi.prototype.exec);\r\n\r\nimport { ICacheConnectionDetail } from 'back-lib-common-contracts';\r\n\r\n\r\ntype CacheLockChain = Promise<void>[];\r\n\r\ninterface RedisClient extends redis.RedisClient {\r\n\t[x: string]: any;\r\n}\r\n\r\ninterface MultiAsync extends redis.Multi {\r\n\t[x: string]: any;\r\n}\r\n\r\nconst EVENT_PREFIX = '__keyspace@0__:',\r\n\tPRIMITIVE = 0,\r\n\tOBJECT = 1,\r\n\tARRAY = 2;\r\n\r\nexport type PrimitiveArg = string | number | boolean;\r\nexport type PrimitiveResult = string & number & boolean;\r\n\r\nexport type PrimitiveFlatJson = {\r\n\t[x: string]: PrimitiveArg\r\n};\r\n\r\nexport enum CacheLevel {\r\n\t/**\r\n\t * Only caches in local memory.\r\n\t */\r\n\tLOCAL = 1, // Binary: 01\r\n\r\n\t/**\r\n\t * Only caches in remote service.\r\n\t */\r\n\tREMOTE = 2, // Binary: 10\r\n\r\n\t/**\r\n\t * Caches in remote service and keeps sync with local memory.\r\n\t */\r\n\tBOTH = 3 // Binary: 11\r\n}\r\n\r\nexport type CacheProviderConstructorOpts = {\r\n\t/**\r\n\t * Is prepended in cache key to avoid key collision between cache instances.\r\n\t */\r\n\tname: string,\r\n\r\n\t/**\r\n\t * Credentials to connect to a single cache service.\r\n\t */\r\n\tsingle?: ICacheConnectionDetail,\r\n\r\n\t/**\r\n\t * Credentials to connect to a cluster of cache services.\r\n\t * This option overrides `single`.\r\n\t */\r\n\tcluster?: ICacheConnectionDetail[]\r\n};\r\n\r\n/**\r\n * Provides methods to read and write data to cache.\r\n */\r\nexport class CacheProvider {\r\n\t\r\n\tprivate _engine: RedisClient;\r\n\tprivate _engineSub: RedisClient;\r\n\tprivate _localCache: { [x: string]: PrimitiveArg | PrimitiveFlatJson };\r\n\tprivate _cacheLocks: { [x: string]: CacheLockChain };\r\n\tprivate _keyRegrex: RegExp;\r\n\t\r\n\t/**\r\n\t * Stores cache type (primitive, object) of each key.\r\n\t */\r\n\tprivate _cacheTypes: { [x: string]: number };\r\n\r\n\t/**\r\n\t * Stores setTimeout token of each key.\r\n\t */\r\n\tprivate _cacheExps: { [x: string]: NodeJS.Timer };\r\n\r\n\r\n\tconstructor(private _options: CacheProviderConstructorOpts) {\r\n\t\tthis._localCache = {\r\n\t\t\t'@#!': null // Activate hash mode (vs. V8's hidden class mode)\r\n\t\t};\r\n\t\tthis._cacheTypes = {};\r\n\t\tthis._cacheExps = {};\r\n\t\tthis._cacheLocks = {};\r\n\r\n\t\tif (_options.cluster) {\r\n\t\t\tthis.promisify(RedisClustr.prototype);\r\n\t\t\tthis._engine = new RedisClustr({\r\n\t\t\t\tservers: _options.cluster\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.promisify(redis.RedisClient.prototype);\r\n\t\t\tthis._engine = this.connectSingle();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate get hasEngine(): boolean {\r\n\t\treturn (this._engine != null);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all local cache and disconnects from remote cache service.\r\n\t */\r\n\tpublic async dispose(): Promise<void> {\r\n\t\tlet tasks = [this._engine.quitAsync()];\r\n\t\tif (this._engineSub) {\r\n\t\t\ttasks.push(this._engineSub.quitAsync());\r\n\t\t\tthis._engineSub = null;\r\n\t\t}\r\n\t\tawait Promise.all(tasks);\r\n\t\tthis._engine = this._localCache = this._cacheTypes = this._cacheExps = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a key from cache.\r\n\t */\r\n\tpublic async delete(key: string): Promise<void> {\r\n\t\tkey = this.realKey(key);\r\n\t\tthis.deleteLocal(key);\r\n\t\tawait this.syncOff(key);\r\n\t\tawait this._engine.delAsync(key);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves a string or number or boolean from cache.\r\n\t * @param {string} key The key to look up.\r\n\t * @param {boolean} forceRemote Skip local cache and fetch from remote server. Default is `false`.\r\n\t * @param {boolean} parseType (Only takes effect when `forceRemote=true`) If true, try to parse value to nearest possible primitive data type.\r\n\t * \t\tIf false, always return string. Default is `true`. Set to `false` to save some performance.\r\n\t */\r\n\tpublic getPrimitive(key: string, forceRemote: boolean = false, parseType: boolean = true): Promise<PrimitiveResult> {\r\n\t\tkey = this.realKey(key);\r\n\t\tif (this._cacheTypes[key] != null && this._cacheTypes[key] !== PRIMITIVE) { return Promise.resolve(null); }\r\n\r\n\t\treturn (!(forceRemote && this.hasEngine) && this._localCache[key] !== undefined)\r\n\t\t\t? Promise.resolve(this._localCache[key])\r\n\t\t\t: this.fetchPrimitive(key, parseType);\r\n\t}\r\n\t/**\r\n\t * Retrieves an array of strings or numbers or booleans from cache.\r\n\t * @param {string} key The key to look up.\r\n\t * @param {boolean} forceRemote Skip local cache and fetch from remote server. Default is `false`.\r\n\t */\r\n\tpublic async getArray(key: string, forceRemote: boolean = false): Promise<PrimitiveResult[]> {\r\n\t\tkey = this.realKey(key);\r\n\t\tif (this._cacheTypes[key] != null && this._cacheTypes[key] !== ARRAY) { return Promise.resolve(null); }\r\n\t\tlet stringified: string = (!(forceRemote && this.hasEngine) && this._localCache[key] !== undefined)\r\n\t\t\t? this._localCache[key]\r\n\t\t\t: await this.fetchPrimitive(key, false);\r\n\r\n\t\treturn JSON.parse(stringified);\r\n\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves an object from cache.\r\n\t * @param {string} key The key to look up.\r\n\t * @param {boolean} forceRemote Skip local cache and fetch from remote server. Default is `false`.\r\n\t * @param {boolean} parseType (Only takes effect when `forceRemote=true`) If true, try to parse every property value to nearest possible primitive data type.\r\n\t * \t\tIf false, always return an object with string properties. \r\n\t * \t\tDefault is `true`. Set to `false` to save some performance.\r\n\t */\r\n\tpublic getObject(key: string, forceRemote: boolean = false, parseType: boolean = true): Promise<PrimitiveFlatJson> {\r\n\t\tkey = this.realKey(key);\r\n\t\tif (this._cacheTypes[key] != null && this._cacheTypes[key] !== OBJECT) { return Promise.resolve(null); }\r\n\r\n\t\treturn (!(forceRemote && this.hasEngine) && this._localCache[key] !== undefined)\r\n\t\t\t? Promise.resolve(this._localCache[key])\r\n\t\t\t: this.fetchObject(key, parseType);\r\n\t}\r\n\r\n\t/**\r\n\t * Saves a string or number or boolean to cache.\r\n\t * @param {string} key The key for later look up.\r\n\t * @param {Primitive} value Primitive value to save.\r\n\t * @param {number} duration Expiration time in seconds.\r\n\t * @param {CacheLevel} level Whether to save in local cache only, or remote only, or both.\r\n\t * \t\tIf both, then local cache is kept in sync with remote value even when\r\n\t * \t\tthis value is updated in remote service from another app process.\r\n\t */\r\n\tpublic async setPrimitive(key: string, value: PrimitiveArg, duration: number = 0, level?: CacheLevel): Promise<void> {\r\n\t\tif (value == null) { return; }\r\n\r\n\t\tlet multi: MultiAsync;\r\n\t\tlevel = this.defaultLevel(level);\r\n\t\tkey = this.realKey(key);\r\n\t\tthis._cacheTypes[key] = PRIMITIVE;\r\n\r\n\t\tif (this.has(level, CacheLevel.LOCAL)) {\r\n\t\t\tthis._localCache[key] = value;\r\n\t\t\tthis.setLocalExp(key, duration);\r\n\t\t}\r\n\r\n\t\tif (this.hasEngine && this.has(level, CacheLevel.REMOTE)) {\r\n\t\t\tmulti = this._engine.multi();\r\n\t\t\tmulti.del(key);\r\n\t\t\tmulti.set(key, <any>value);\r\n\t\t\tif (duration > 0) {\r\n\t\t\t\tmulti.expire(key, duration);\r\n\t\t\t}\r\n\r\n\t\t\tawait multi.execAsync();\r\n\t\t}\r\n\r\n\t\tif (this.hasEngine && this.has(level, CacheLevel.BOTH)) {\r\n\t\t\tawait this.syncOn(key);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Saves an array to cache.\r\n\t * @param {string} key The key for later look up.\r\n\t * @param {Primitive[]} arr Primitive array to save.\r\n\t * @param {number} duration Expiration time in seconds.\r\n\t * @param {CacheLevel} level Whether to save in local cache only, or remote only, or both.\r\n\t * \t\tIf both, then local cache is kept in sync with remote value even when\r\n\t * \t\tthis value is updated in remote service from another app process.\r\n\t */\r\n\tpublic async setArray(key: string, arr: any[], duration: number = 0, level?: CacheLevel): Promise<void> {\r\n\t\tif (!arr) { return; }\r\n\r\n\t\tlet stringified = JSON.stringify(arr),\r\n\t\t\tpromise = this.setPrimitive(key, stringified, duration, level);\r\n\t\tthis._cacheTypes[this.realKey(key)] = ARRAY;\r\n\t\treturn promise;\r\n\t}\r\n\r\n\t/**\r\n\t * Saves an object to cache.\r\n\t * @param {string} key The key for later look up.\r\n\t * @param {PrimitiveFlatJson} value Object value to save.\r\n\t * @param {number} duration Expiration time in seconds.\r\n\t * @param {CacheLevel} level Whether to save in local cache only, or remote only, or both.\r\n\t * \t\tIf both, then local cache is kept in sync with remote value even when\r\n\t * \t\tthis value is updated in remote service from another app process.\r\n\t */\r\n\tpublic async setObject(key: string, value: PrimitiveFlatJson, duration?: number, level?: CacheLevel): Promise<void> {\r\n\t\tlet multi: MultiAsync;\r\n\t\tlevel = this.defaultLevel(level);\r\n\t\tkey = this.realKey(key);\r\n\t\tthis._cacheTypes[key] = OBJECT;\r\n\r\n\t\tif (this.has(level, CacheLevel.LOCAL)) {\r\n\t\t\tthis._localCache[key] = value;\r\n\t\t\tthis.setLocalExp(key, duration);\r\n\t\t}\r\n\r\n\t\tif (this.hasEngine && this.has(level, CacheLevel.REMOTE)) {\r\n\t\t\tmulti = this._engine.multi();\r\n\t\t\tmulti.del(key);\r\n\t\t\tmulti.hmset(key, <any>value);\r\n\t\t\tif (duration > 0) {\r\n\t\t\t\tmulti.expire(key, duration);\r\n\t\t\t}\r\n\t\t\tawait multi.execAsync();\r\n\t\t}\r\n\r\n\t\tif (this.hasEngine && this.has(level, CacheLevel.BOTH)) {\r\n\t\t\tawait this.syncOn(key);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\tprivate connectSingle(): redis.RedisClient {\r\n\t\tlet opts = this._options.single;\r\n\t\tif (!opts) { return null; }\r\n\r\n\t\treturn redis.createClient({\r\n\t\t\thost: opts.host,\r\n\t\t\tport: opts.port\r\n\t\t});\r\n\t}\r\n\r\n\tprivate defaultLevel(level: CacheLevel): CacheLevel {\r\n\t\treturn (level)\r\n\t\t\t? level\r\n\t\t\t: (this.hasEngine) ? CacheLevel.REMOTE : CacheLevel.LOCAL;\r\n\t}\r\n\r\n\tprivate deleteLocal(key: string) {\r\n\t\tdelete this._localCache[key];\r\n\t\tdelete this._cacheTypes[key];\r\n\t\tclearTimeout(this._cacheExps[key]);\r\n\t\tdelete this._cacheExps[key];\r\n\t}\r\n\r\n\tprivate extractKey(channel: string): string {\r\n\t\tlet result = this._keyRegrex.exec(channel);\r\n\t\treturn result[1];\r\n\t}\r\n\r\n\tprivate async fetchObject(key: string, parseType: boolean): Promise<any> {\r\n\t\tlet data = await this._engine.hgetallAsync(key);\r\n\t\treturn (this._cacheTypes[key] != ARRAY && parseType) ? this.parseObjectType(data) : data;\r\n\t}\r\n\r\n\tprivate async fetchPrimitive(key: string, parseType: boolean = true): Promise<any> {\r\n\t\tlet data = await this._engine.getAsync(key);\r\n\t\treturn (this._cacheTypes[key] != ARRAY && parseType) ? this.parsePrimitiveType(data) : data;\r\n\t}\r\n\r\n\tprivate createLockChain(): CacheLockChain {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the last lock from lock queue then returns it.\r\n\t */\r\n\tprivate popLock(key: string): Promise<void> {\r\n\t\tlet lockChain: CacheLockChain = this._cacheLocks[key],\r\n\t\t\tlock = lockChain.pop();\r\n\t\tif (!lockChain.length) {\r\n\t\t\tdelete this._cacheLocks[key];\r\n\t\t}\r\n\t\treturn lock;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the first lock in queue.\r\n\t */\r\n\tprivate peekLock(key: string): Promise<void> {\r\n\t\treturn (this._cacheLocks[key]) ? this._cacheLocks[key][0] : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a new lock at the beginning of lock queue.\r\n\t */\r\n\tprivate pushLock(key: string): void {\r\n\t\tlet lockChain: CacheLockChain = this._cacheLocks[key],\r\n\t\t\treleaseFn,\r\n\t\t\tlock = new Promise<void>(resolve => releaseFn = resolve);\r\n\t\tlock['release'] = releaseFn;\r\n\r\n\t\tif (!lockChain) {\r\n\t\t\tlockChain = this._cacheLocks[key] = this.createLockChain();\r\n\t\t}\r\n\t\tlockChain.unshift(lock);\r\n\t}\r\n\r\n\tprivate lockKey(key: string): Promise<void> {\r\n\t\tlet lock = this.peekLock(key);\r\n\r\n\t\t// Put my lock here\r\n\t\tthis.pushLock(key);\r\n\r\n\t\t// If I'm the first one, I don't need to wait.\r\n\t\tif (!lock) {\r\n\t\t\treturn Promise.resolve();\r\n\t\t}\r\n\r\n\t\t// If this key is already locked, then wait...\r\n\t\treturn lock;\r\n\t}\r\n\r\n\tprivate releaseKey(key: string): void {\r\n\t\tlet lock = this.popLock(key);\r\n\t\tlock && lock['release']();\r\n\t}\r\n\r\n\tprivate async syncOn(key: string): Promise<void> {\r\n\t\tlet sub = this._engineSub;\r\n\r\n\t\tif (!sub) { \r\n\t\t\tthis._keyRegrex = new RegExp(`${EVENT_PREFIX}(.*)`);\r\n\t\t\tif (!this._options.cluster) {\r\n\t\t\t\tsub = this._engineSub = this.connectSingle();\r\n\t\t\t} else {\r\n\t\t\t\t// Redis-clusr can handle bi-directional commands.\r\n\t\t\t\tsub = this._engineSub = this._engine;\r\n\t\t\t}\r\n\r\n\t\t\t// TODO: This config should be in Redis conf\r\n\t\t\tawait this._engine.config('SET', 'notify-keyspace-events', 'KEA');\r\n\t\t\tsub.on('message', async (channel, action) => {\r\n\t\t\t\tlet affectedKey = this.extractKey(channel);\r\n\r\n\t\t\t\tawait this.lockKey(key);\r\n\r\n\t\t\t\tswitch (action) {\r\n\t\t\t\t\tcase 'set':\r\n\t\t\t\t\t\t// this._localCache[affectedKey] = await this.getPrimitive(affectedKey, true);\r\n\t\t\t\t\t\tthis._localCache[affectedKey] = await this.fetchPrimitive(affectedKey, true);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'hset':\r\n\t\t\t\t\t\t// this._localCache[affectedKey] = await this.getObject(affectedKey, true);\r\n\t\t\t\t\t\tthis._localCache[affectedKey] = await this.fetchObject(affectedKey, true);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'del':\r\n\t\t\t\t\t\tthis.deleteLocal(affectedKey);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tthis.releaseKey(key);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Listens to changes of this key.\r\n\t\tawait sub.subscribeAsync(`${EVENT_PREFIX}${key}`);\r\n\t}\r\n\r\n\tprivate async syncOff(key: string): Promise<void> {\r\n\t\tlet sub = this._engineSub;\r\n\t\tif (!sub) { return; }\r\n\t\tawait sub.unsubscribeAsync(`${EVENT_PREFIX}${key}`);\r\n\t}\r\n\r\n\tprivate has(source: CacheLevel, target: CacheLevel): boolean {\r\n\t\treturn ((source & target) == target);\r\n\t}\r\n\r\n\tprivate parsePrimitiveType(val: string): any {\r\n\t\ttry {\r\n\t\t\t// Try parsing to number or boolean\r\n\t\t\treturn JSON.parse(val);\r\n\t\t} catch {\r\n\t\t\treturn val;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate parseObjectType(obj: {[x: string]: string}): any {\r\n\t\tfor (let p in obj) {\r\n\t\t\t/* istanbul ignore else */\r\n\t\t\tif (obj.hasOwnProperty(p)) {\r\n\t\t\t\tobj[p] = this.parsePrimitiveType(obj[p]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tprivate promisify(prototype: any): void {\r\n\t\tfor (let fn of ['del', 'hmset', 'hgetall', 'get', 'set', 'config', 'quit', 'subscribe', 'unsubscribe']) {\r\n\t\t\tprototype[`${fn}Async`] = (<any>Promise).promisify(prototype[fn]);\r\n\t\t}\r\n\t\tprototype['__promisified'] = true;\r\n\t}\r\n\r\n\tprivate setLocalExp(key: string, duration: number): void {\r\n\t\tif (duration > 0) {\r\n\t\t\tthis._cacheExps[key] = setTimeout(() => this.deleteLocal(key), duration * 1000);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate realKey(key: string): string {\r\n\t\treturn `${this._options.name}::${key}`;\r\n\t}\r\n}"]}